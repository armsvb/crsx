/* Generated By:JavaCC: Do not edit this line. Raw2Constants.java */
package net.sf.crsx.hoacs.bootstrap;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Raw2Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MT_Module = 1;
  /** RegularExpression Id. */
  int IT_Module = 2;
  /** RegularExpression Id. */
  int MT_EmbeddedModule = 6;
  /** RegularExpression Id. */
  int IT_EmbeddedModule = 7;
  /** RegularExpression Id. */
  int MT_Declarations = 8;
  /** RegularExpression Id. */
  int IT_Declarations = 9;
  /** RegularExpression Id. */
  int MT_Declaration = 10;
  /** RegularExpression Id. */
  int IT_Declaration = 11;
  /** RegularExpression Id. */
  int MT_RegExp = 12;
  /** RegularExpression Id. */
  int IT_RegExp = 13;
  /** RegularExpression Id. */
  int MT_RegExpChoice = 14;
  /** RegularExpression Id. */
  int IT_RegExpChoice = 15;
  /** RegularExpression Id. */
  int MT_RegExpUnits = 16;
  /** RegularExpression Id. */
  int IT_RegExpUnits = 17;
  /** RegularExpression Id. */
  int MT_RegExpUnit = 18;
  /** RegularExpression Id. */
  int IT_RegExpUnit = 19;
  /** RegularExpression Id. */
  int MT_Repeat = 20;
  /** RegularExpression Id. */
  int IT_Repeat = 21;
  /** RegularExpression Id. */
  int MT_RegExpLeaf = 22;
  /** RegularExpression Id. */
  int IT_RegExpLeaf = 23;
  /** RegularExpression Id. */
  int MT_RegExpSimple = 24;
  /** RegularExpression Id. */
  int IT_RegExpSimple = 25;
  /** RegularExpression Id. */
  int MT_AttributeForm = 26;
  /** RegularExpression Id. */
  int IT_AttributeForm = 27;
  /** RegularExpression Id. */
  int MT_AttributeOptions = 28;
  /** RegularExpression Id. */
  int IT_AttributeOptions = 29;
  /** RegularExpression Id. */
  int MT_AttributeOption = 30;
  /** RegularExpression Id. */
  int IT_AttributeOption = 31;
  /** RegularExpression Id. */
  int MT_SortNames = 32;
  /** RegularExpression Id. */
  int IT_SortNames = 33;
  /** RegularExpression Id. */
  int MT_SortAbstraction = 34;
  /** RegularExpression Id. */
  int IT_SortAbstraction = 35;
  /** RegularExpression Id. */
  int MT_SortAlternatives = 36;
  /** RegularExpression Id. */
  int IT_SortAlternatives = 37;
  /** RegularExpression Id. */
  int MT_SortAlternative = 38;
  /** RegularExpression Id. */
  int IT_SortAlternative = 39;
  /** RegularExpression Id. */
  int MT_Form = 40;
  /** RegularExpression Id. */
  int IT_Form = 41;
  /** RegularExpression Id. */
  int MT_ScopeSorts = 42;
  /** RegularExpression Id. */
  int IT_ScopeSorts = 43;
  /** RegularExpression Id. */
  int MT_ScopeSort = 44;
  /** RegularExpression Id. */
  int IT_ScopeSort = 45;
  /** RegularExpression Id. */
  int MT_SubstituteSorts = 46;
  /** RegularExpression Id. */
  int IT_SubstituteSorts = 47;
  /** RegularExpression Id. */
  int MT_SubstituteSort = 48;
  /** RegularExpression Id. */
  int IT_SubstituteSort = 49;
  /** RegularExpression Id. */
  int MT_Sort = 50;
  /** RegularExpression Id. */
  int IT_Sort = 51;
  /** RegularExpression Id. */
  int MT_SimpleSorts = 52;
  /** RegularExpression Id. */
  int IT_SimpleSorts = 53;
  /** RegularExpression Id. */
  int MT_SimpleSort = 54;
  /** RegularExpression Id. */
  int IT_SimpleSort = 55;
  /** RegularExpression Id. */
  int MT_MetaVariables = 56;
  /** RegularExpression Id. */
  int IT_MetaVariables = 57;
  /** RegularExpression Id. */
  int MT_SortParam = 58;
  /** RegularExpression Id. */
  int IT_SortParam = 59;
  /** RegularExpression Id. */
  int MT_FormPrec = 60;
  /** RegularExpression Id. */
  int IT_FormPrec = 61;
  /** RegularExpression Id. */
  int MT_Tagging = 62;
  /** RegularExpression Id. */
  int IT_Tagging = 63;
  /** RegularExpression Id. */
  int MT_InheritedRefs = 64;
  /** RegularExpression Id. */
  int IT_InheritedRefs = 65;
  /** RegularExpression Id. */
  int MT_InheritedRef = 66;
  /** RegularExpression Id. */
  int IT_InheritedRef = 67;
  /** RegularExpression Id. */
  int MT_Rule = 68;
  /** RegularExpression Id. */
  int IT_Rule = 69;
  /** RegularExpression Id. */
  int MT_Priority = 70;
  /** RegularExpression Id. */
  int IT_Priority = 71;
  /** RegularExpression Id. */
  int MT_Term = 72;
  /** RegularExpression Id. */
  int IT_Term = 73;
  /** RegularExpression Id. */
  int MT_NotVariableTerm = 74;
  /** RegularExpression Id. */
  int IT_NotVariableTerm = 75;
  /** RegularExpression Id. */
  int MT_Construction = 76;
  /** RegularExpression Id. */
  int IT_Construction = 77;
  /** RegularExpression Id. */
  int MT_Scopes = 78;
  /** RegularExpression Id. */
  int IT_Scopes = 79;
  /** RegularExpression Id. */
  int MT_Scope = 80;
  /** RegularExpression Id. */
  int IT_Scope = 81;
  /** RegularExpression Id. */
  int MT_Variables = 82;
  /** RegularExpression Id. */
  int IT_Variables = 83;
  /** RegularExpression Id. */
  int MT_VariableList = 84;
  /** RegularExpression Id. */
  int IT_VariableList = 85;
  /** RegularExpression Id. */
  int MT_Terms = 86;
  /** RegularExpression Id. */
  int IT_Terms = 87;
  /** RegularExpression Id. */
  int MT_Attributes = 88;
  /** RegularExpression Id. */
  int IT_Attributes = 89;
  /** RegularExpression Id. */
  int MT_Attribute = 90;
  /** RegularExpression Id. */
  int IT_Attribute = 91;
  /** RegularExpression Id. */
  int MT_AttributeKind = 92;
  /** RegularExpression Id. */
  int IT_AttributeKind = 93;
  /** RegularExpression Id. */
  int MT_AttributeValue = 94;
  /** RegularExpression Id. */
  int IT_AttributeValue = 95;
  /** RegularExpression Id. */
  int T_CONCRETE = 100;
  /** RegularExpression Id. */
  int MT_ModuleName = 105;
  /** RegularExpression Id. */
  int IT_ModuleName = 106;
  /** RegularExpression Id. */
  int MT_SortName = 107;
  /** RegularExpression Id. */
  int IT_SortName = 108;
  /** RegularExpression Id. */
  int MT_FragmentName = 109;
  /** RegularExpression Id. */
  int IT_FragmentName = 110;
  /** RegularExpression Id. */
  int MT_FragmentRef = 111;
  /** RegularExpression Id. */
  int IT_FragmentRef = 112;
  /** RegularExpression Id. */
  int MT_AttributeName = 113;
  /** RegularExpression Id. */
  int IT_AttributeName = 114;
  /** RegularExpression Id. */
  int MT_Constructor = 115;
  /** RegularExpression Id. */
  int IT_Constructor = 116;
  /** RegularExpression Id. */
  int MT_Variable = 117;
  /** RegularExpression Id. */
  int IT_Variable = 118;
  /** RegularExpression Id. */
  int MT_MetaVariable = 119;
  /** RegularExpression Id. */
  int IT_MetaVariable = 120;
  /** RegularExpression Id. */
  int MT_Separator = 121;
  /** RegularExpression Id. */
  int IT_Separator = 122;
  /** RegularExpression Id. */
  int MT_Literal = 123;
  /** RegularExpression Id. */
  int IT_Literal = 124;
  /** RegularExpression Id. */
  int MT_Number = 125;
  /** RegularExpression Id. */
  int IT_Number = 126;
  /** RegularExpression Id. */
  int MT_Natural = 127;
  /** RegularExpression Id. */
  int IT_Natural = 128;
  /** RegularExpression Id. */
  int MT_String = 129;
  /** RegularExpression Id. */
  int IT_String = 130;
  /** RegularExpression Id. */
  int MT_Word = 131;
  /** RegularExpression Id. */
  int IT_Word = 132;
  /** RegularExpression Id. */
  int MT_RegExpClass = 133;
  /** RegularExpression Id. */
  int IT_RegExpClass = 134;
  /** RegularExpression Id. */
  int MT_CC = 135;
  /** RegularExpression Id. */
  int IT_CC = 136;
  /** RegularExpression Id. */
  int MT_CC_RangesTop = 137;
  /** RegularExpression Id. */
  int IT_CC_RangesTop = 138;
  /** RegularExpression Id. */
  int MT_CC_Ranges = 139;
  /** RegularExpression Id. */
  int IT_CC_Ranges = 140;
  /** RegularExpression Id. */
  int MT_CC_RangeTail = 141;
  /** RegularExpression Id. */
  int IT_CC_RangeTail = 142;
  /** RegularExpression Id. */
  int MT_CC_FirstRangeStartChar = 143;
  /** RegularExpression Id. */
  int IT_CC_FirstRangeStartChar = 144;
  /** RegularExpression Id. */
  int MT_CC_NonDashRangeStartChar = 145;
  /** RegularExpression Id. */
  int IT_CC_NonDashRangeStartChar = 146;
  /** RegularExpression Id. */
  int MT_CC_RangeChar = 147;
  /** RegularExpression Id. */
  int IT_CC_RangeChar = 148;
  /** RegularExpression Id. */
  int T_Embedded = 149;
  /** RegularExpression Id. */
  int T_SEMI = 151;
  /** RegularExpression Id. */
  int T_BAR = 152;
  /** RegularExpression Id. */
  int T_LPAREN = 153;
  /** RegularExpression Id. */
  int T_RPAREN = 154;
  /** RegularExpression Id. */
  int T_STAR = 155;
  /** RegularExpression Id. */
  int T_PLUS = 156;
  /** RegularExpression Id. */
  int T_QUEST = 157;
  /** RegularExpression Id. */
  int T_SUB = 158;
  /** RegularExpression Id. */
  int T_DOT = 159;
  /** RegularExpression Id. */
  int T_COLON = 160;
  /** RegularExpression Id. */
  int T_LBRACE = 161;
  /** RegularExpression Id. */
  int T_RBRACE = 162;
  /** RegularExpression Id. */
  int T_HASH = 163;
  /** RegularExpression Id. */
  int T_LBRACKET = 164;
  /** RegularExpression Id. */
  int T_RBRACKET = 165;
  /** RegularExpression Id. */
  int T_COMMA = 166;
  /** RegularExpression Id. */
  int T_FORALL = 167;
  /** RegularExpression Id. */
  int T_ARROW = 168;
  /** RegularExpression Id. */
  int T_UP = 169;
  /** RegularExpression Id. */
  int T_DOWN = 170;
  /** RegularExpression Id. */
  int T_NOT = 171;
  /** RegularExpression Id. */
  int T_AT = 172;
  /** RegularExpression Id. */
  int T_DASH = 173;
  /** RegularExpression Id. */
  int T_DIGIT = 174;
  /** RegularExpression Id. */
  int T_LOWER = 175;
  /** RegularExpression Id. */
  int T_UPPER = 176;
  /** RegularExpression Id. */
  int T_MODULE = 177;
  /** RegularExpression Id. */
  int T_SORT = 178;
  /** RegularExpression Id. */
  int T_DATA = 179;
  /** RegularExpression Id. */
  int T_SCHEME = 180;
  /** RegularExpression Id. */
  int T_AUTOMATIC = 181;
  /** RegularExpression Id. */
  int T_SYMBOL = 182;
  /** RegularExpression Id. */
  int T_STATIC = 183;
  /** RegularExpression Id. */
  int T_ATTRIBUTE = 184;
  /** RegularExpression Id. */
  int T_COMPOSE = 185;
  /** RegularExpression Id. */
  int T_SUGAR = 186;
  /** RegularExpression Id. */
  int T_RULE = 187;
  /** RegularExpression Id. */
  int T_PRIORITY = 188;
  /** RegularExpression Id. */
  int T_DEFAULT = 189;
  /** RegularExpression Id. */
  int T_IMPORT = 190;
  /** RegularExpression Id. */
  int T_TAG = 191;
  /** RegularExpression Id. */
  int T_SPACE = 192;
  /** RegularExpression Id. */
  int T_TOKEN = 193;
  /** RegularExpression Id. */
  int T_FRAGMENT = 194;
  /** RegularExpression Id. */
  int T_NESTED = 195;
  /** RegularExpression Id. */
  int T_META = 196;
  /** RegularExpression Id. */
  int T_VAR = 197;
  /** RegularExpression Id. */
  int T_CON = 198;
  /** RegularExpression Id. */
  int T_SUFFIX = 199;
  /** RegularExpression Id. */
  int T_NAME = 200;
  /** RegularExpression Id. */
  int T_FRAGMENT_REF = 201;
  /** RegularExpression Id. */
  int T_NATURAL = 202;
  /** RegularExpression Id. */
  int T_INTEGER = 203;
  /** RegularExpression Id. */
  int T_UNNATURAL = 204;
  /** RegularExpression Id. */
  int T_STRING = 205;
  /** RegularExpression Id. */
  int T_STRING1CHAR = 206;
  /** RegularExpression Id. */
  int T_STRING2CHAR = 207;
  /** RegularExpression Id. */
  int T_ESCAPEDCHAR = 208;
  /** RegularExpression Id. */
  int T_HEX = 209;
  /** RegularExpression Id. */
  int T_OTHERCHAR = 210;
  /** RegularExpression Id. */
  int T_WORD = 211;
  /** RegularExpression Id. */
  int T_CHAR_CLASS = 212;
  /** RegularExpression Id. */
  int T_CC_NOT = 213;
  /** RegularExpression Id. */
  int T_CC_RBRACKET = 214;
  /** RegularExpression Id. */
  int T_CC_DASH = 215;
  /** RegularExpression Id. */
  int T_CC_OTHER = 216;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int RE = 1;
  /** Lexical state. */
  int NESTED_CONCRETE = 2;
  /** Lexical state. */
  int NESTED_CONCRETE_END = 3;
  /** Lexical state. */
  int NESTED_COMMENT = 4;
  /** Lexical state. */
  int CC = 5;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<MT_Module>",
    "\"%Module\"",
    "\"\\u2983\"",
    "\"\\u2225\"",
    "\"\\u2984\"",
    "<MT_EmbeddedModule>",
    "\"%EmbeddedModule\"",
    "<MT_Declarations>",
    "\"%Declarations\"",
    "<MT_Declaration>",
    "\"%Declaration\"",
    "<MT_RegExp>",
    "\"%RegExp\"",
    "<MT_RegExpChoice>",
    "\"%RegExpChoice\"",
    "<MT_RegExpUnits>",
    "\"%RegExpUnits\"",
    "<MT_RegExpUnit>",
    "\"%RegExpUnit\"",
    "<MT_Repeat>",
    "\"%Repeat\"",
    "<MT_RegExpLeaf>",
    "\"%RegExpLeaf\"",
    "<MT_RegExpSimple>",
    "\"%RegExpSimple\"",
    "<MT_AttributeForm>",
    "\"%AttributeForm\"",
    "<MT_AttributeOptions>",
    "\"%AttributeOptions\"",
    "<MT_AttributeOption>",
    "\"%AttributeOption\"",
    "<MT_SortNames>",
    "\"%SortNames\"",
    "<MT_SortAbstraction>",
    "\"%SortAbstraction\"",
    "<MT_SortAlternatives>",
    "\"%SortAlternatives\"",
    "<MT_SortAlternative>",
    "\"%SortAlternative\"",
    "<MT_Form>",
    "\"%Form\"",
    "<MT_ScopeSorts>",
    "\"%ScopeSorts\"",
    "<MT_ScopeSort>",
    "\"%ScopeSort\"",
    "<MT_SubstituteSorts>",
    "\"%SubstituteSorts\"",
    "<MT_SubstituteSort>",
    "\"%SubstituteSort\"",
    "<MT_Sort>",
    "\"%Sort\"",
    "<MT_SimpleSorts>",
    "\"%SimpleSorts\"",
    "<MT_SimpleSort>",
    "\"%SimpleSort\"",
    "<MT_MetaVariables>",
    "\"%MetaVariables\"",
    "<MT_SortParam>",
    "\"%SortParam\"",
    "<MT_FormPrec>",
    "\"%FormPrec\"",
    "<MT_Tagging>",
    "\"%Tagging\"",
    "<MT_InheritedRefs>",
    "\"%InheritedRefs\"",
    "<MT_InheritedRef>",
    "\"%InheritedRef\"",
    "<MT_Rule>",
    "\"%Rule\"",
    "<MT_Priority>",
    "\"%Priority\"",
    "<MT_Term>",
    "\"%Term\"",
    "<MT_NotVariableTerm>",
    "\"%NotVariableTerm\"",
    "<MT_Construction>",
    "\"%Construction\"",
    "<MT_Scopes>",
    "\"%Scopes\"",
    "<MT_Scope>",
    "\"%Scope\"",
    "<MT_Variables>",
    "\"%Variables\"",
    "<MT_VariableList>",
    "\"%VariableList\"",
    "<MT_Terms>",
    "\"%Terms\"",
    "<MT_Attributes>",
    "\"%Attributes\"",
    "<MT_Attribute>",
    "\"%Attribute\"",
    "<MT_AttributeKind>",
    "\"%AttributeKind\"",
    "<MT_AttributeValue>",
    "\"%AttributeValue\"",
    "\"\\u27e6\"",
    "\"\\u27e6\"",
    "\"\\u27e7\"",
    "<token of kind 99>",
    "\"\"",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 104>",
    "<MT_ModuleName>",
    "\"%ModuleName\"",
    "<MT_SortName>",
    "\"%SortName\"",
    "<MT_FragmentName>",
    "\"%FragmentName\"",
    "<MT_FragmentRef>",
    "\"%FragmentRef\"",
    "<MT_AttributeName>",
    "\"%AttributeName\"",
    "<MT_Constructor>",
    "\"%Constructor\"",
    "<MT_Variable>",
    "\"%Variable\"",
    "<MT_MetaVariable>",
    "\"%MetaVariable\"",
    "<MT_Separator>",
    "\"%Separator\"",
    "<MT_Literal>",
    "\"%Literal\"",
    "<MT_Number>",
    "\"%Number\"",
    "<MT_Natural>",
    "\"%Natural\"",
    "<MT_String>",
    "\"%String\"",
    "<MT_Word>",
    "\"%Word\"",
    "<MT_RegExpClass>",
    "\"%RegExpClass\"",
    "<MT_CC>",
    "\"%CC\"",
    "<MT_CC_RangesTop>",
    "\"%CC_RangesTop\"",
    "<MT_CC_Ranges>",
    "\"%CC_Ranges\"",
    "<MT_CC_RangeTail>",
    "\"%CC_RangeTail\"",
    "<MT_CC_FirstRangeStartChar>",
    "\"%CC_FirstRangeStartChar\"",
    "<MT_CC_NonDashRangeStartChar>",
    "\"%CC_NonDashRangeStartChar\"",
    "<MT_CC_RangeChar>",
    "\"%CC_RangeChar\"",
    "<T_Embedded>",
    "<token of kind 150>",
    "\";\"",
    "\"|\"",
    "\"(\"",
    "\")\"",
    "\"*\"",
    "\"+\"",
    "\"?\"",
    "\"_\"",
    "\".\"",
    "\":\"",
    "\"{\"",
    "\"}\"",
    "\"#\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\"\\u2200\"",
    "\"\\u2192\"",
    "\"\\u2191\"",
    "\"\\u2193\"",
    "\"\\u00ac\"",
    "\"@\"",
    "\"-\"",
    "<T_DIGIT>",
    "<T_LOWER>",
    "<T_UPPER>",
    "\"module\"",
    "\"sort\"",
    "\"data\"",
    "\"scheme\"",
    "\"automatic\"",
    "\"symbol\"",
    "\"static\"",
    "\"attribute\"",
    "\"compose\"",
    "\"sugar\"",
    "\"rule\"",
    "\"priority\"",
    "\"default\"",
    "\"import\"",
    "\"tag\"",
    "\"space\"",
    "\"token\"",
    "\"fragment\"",
    "\"nested\"",
    "<T_META>",
    "<T_VAR>",
    "<T_CON>",
    "<T_SUFFIX>",
    "<T_NAME>",
    "<T_FRAGMENT_REF>",
    "<T_NATURAL>",
    "<T_INTEGER>",
    "<T_UNNATURAL>",
    "<T_STRING>",
    "<T_STRING1CHAR>",
    "<T_STRING2CHAR>",
    "<T_ESCAPEDCHAR>",
    "<T_HEX>",
    "<T_OTHERCHAR>",
    "<T_WORD>",
    "<T_CHAR_CLASS>",
    "\"^\"",
    "\"]\"",
    "\"-\"",
    "<T_CC_OTHER>",
  };

}
