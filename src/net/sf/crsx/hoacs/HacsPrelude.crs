// $Id: HacsPrelude.crs,v 1.1 2013/10/02 19:23:18 krisrose Exp $
HacsPrelude[(

$Use["net.sf.crsx.text.Text"];

// Basic values.

HacsValue ::=( HACS_NUMBER[$Numeric]; HACS_STRING[$String]; HACS_TEXT[Text]; HACS_MAP[HacsMapping]; );
{$String : HacsValue} HacsMapping ::=( HACS_MAPPING; ); 


HacsCompute[HacsOperator, $List[HavsValue]] → HacsValue ;


// Operations on numbers.

HacsPlus[HacsValue, HacsValue] :: HacsValue ;
-[Data[#1,#2]]: HacsPlus[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Plus,#1,#2]] ;

HacsPlus[HacsValue, HacsValue] :: HacsValue ;
-[Data[#1,#2]]: HacsMinus[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Minus,#1,#2]] ;

HacsTimes[HacsValue, HacsValue] :: HacsValue ;
-[Data[#1,#2]]: HacsTimes[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Times,#1,#2]] ;

HacsModulo[HacsValue, HacsValue] :: HacsValue ;
-[Data[#1,#2]]: HacsDivide[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Divide,#1,#2]] ;

HacsModulo[HacsValue, HacsValue] :: HacsValue ;
-[Data[#1,#2]]: HacsModulo[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Modulo,#1,#2]] ;

// Operations on Strings.


-[Data[#1,#2]]: HacsPlus[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Plus,#1,#2]] ;
-[Data[#1,#2]]: HacsPlus[HACS_NUMBER[#1], HACS_NUMBER[#2]] → HACS_NUMBER[$[Plus,#1,#2]] ;


)]
