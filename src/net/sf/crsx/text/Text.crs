// Copyright (c) 2010 IBM Corporation.
// $Id: Text.crs,v 3.6 2013/12/18 20:16:18 villardl Exp $

// Text support.

Text[(

// Make sure user loaded the special text syntax.
$CheckGrammar["net.sf.crsx.text.Text"];

// Sorts using constructors from grammar.
Text ::= ( x; $TextCons[Text-Part, Text] ; $TextNil ; ) ;

Text-Part ::= (
	$TextChars[$String] ;
	$TextBreak[$String] ;
	$TextSeparator ;
	$TextGroup[Text] ;
	$TextIndent[Text] ;
	$TextEmbed[Text] ;
	$TextString[Text];
) ;

// Some utilities.


∀ a . AsText[a] :: Text;
AsText[#text] → #text ;


Text-ReverseConcat[$List[Text]] :: Text;
Text-ReverseConcat[()]       → %n⟨⟩;
Text-ReverseConcat[(#1;#s)]  → %n⟨«Text-ReverseConcat[#s]»«#1»⟩;

// Fragment denoting term embedded in user language text.
//
Text-Embed[Text<!--Term-->] :: Text ;
Text-Embed[#TermText] → %n⟪†«"\u00ab\u00ab"»« #TermText »†«"\u00bb\u00bb"»⟫ ;

// Fragment denoting string embedded in user language text.
//
Text-String[Text<!--String-->] :: Text ;
Text-String[#TermText] → %n⟪†«"\u2020\u2020"»†«"\u00ab\u00ab"»« #TermText »†«"\u00bb\u00bb"»⟫ ;


// Fragment to be parsed as generated text (to be printed).
//
Text-Text[Text] :: Text ;
Text-Text[#content] → Text-User["n", #content] ;

// Fragment to be parsed as user language text.
//
Text-User[$String<!--ParsePrefix-->, Text<!-- Unparsed -->] :: Text ;
Text-User[#ParsePrefix, #Unparsed] →  %n⟪%†«#ParsePrefix»†«"\u27ea"»« #Unparsed »†«"\u27eb"»⟫ ;


)]
