/* Generated By:JavaCC: Do not edit this line. FirstParserTokenManager.java */
package net.sf.crsx.samples.gentle;

/** Token Manager. */
public class FirstParserTokenManager implements FirstParserConstants
{
                    int nested_counter;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_9()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 37);
      case 10217:
         return jjStopAtPos(0, 39);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_29()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 110);
      case 10217:
         return jjStopAtPos(0, 112);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_27()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 104);
      case 10217:
         return jjStopAtPos(0, 106);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_19()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 70);
      case 10217:
         return jjStopAtPos(0, 72);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 9);
      case 10217:
         return jjStopAtPos(0, 11);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_10()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 37);
      case 10217:
         return jjStopAtPos(0, 38);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_17()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 64);
      case 10217:
         return jjStopAtPos(0, 66);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_16()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 57);
      case 10217:
         return jjStopAtPos(0, 58);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_28()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 104);
      case 10217:
         return jjStopAtPos(0, 105);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_26()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 95);
      case 10217:
         return jjStopAtPos(0, 96);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_15()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 57);
      case 10217:
         return jjStopAtPos(0, 59);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_14()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 49);
      case 10217:
         return jjStopAtPos(0, 50);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_30()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 110);
      case 10217:
         return jjStopAtPos(0, 111);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_21()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 76);
      case 10217:
         return jjStopAtPos(0, 78);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_5()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 15);
      case 10217:
         return jjStopAtPos(0, 17);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_7()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 27);
      case 10217:
         return jjStopAtPos(0, 29);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_8()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 27);
      case 10217:
         return jjStopAtPos(0, 28);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_4()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 9);
      case 10217:
         return jjStopAtPos(0, 10);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_25()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 95);
      case 10217:
         return jjStopAtPos(0, 97);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_22()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 76);
      case 10217:
         return jjStopAtPos(0, 77);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_24()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 84);
      case 10217:
         return jjStopAtPos(0, 85);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 3);
      case 10217:
         return jjStopAtPos(0, 5);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_11()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 43);
      case 10217:
         return jjStopAtPos(0, 45);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_12()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 43);
      case 10217:
         return jjStopAtPos(0, 44);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_20()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 70);
      case 10217:
         return jjStopAtPos(0, 71);
      default :
         return 1;
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x180000L) != 0L)
         {
            jjmatchedKind = 120;
            return 5;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 99);
      case 40:
         return jjStopAtPos(0, 33);
      case 41:
         return jjStopAtPos(0, 34);
      case 42:
         return jjStopAtPos(0, 32);
      case 43:
         return jjStopAtPos(0, 31);
      case 44:
         return jjStopAtPos(0, 89);
      case 58:
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 59:
         return jjStopAtPos(0, 24);
      case 61:
         return jjStopAtPos(0, 61);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000L);
      case 67:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x30000L);
      case 73:
         return jjMoveStringLiteralDfa1_0(0x60000000000000L, 0x0L);
      case 76:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000000L);
      case 77:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000000L);
      case 83:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000L);
      case 84:
         return jjMoveStringLiteralDfa1_0(0x180000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 100);
      case 93:
         return jjStopAtPos(0, 101);
      case 123:
         return jjStopAtPos(0, 21);
      case 125:
         return jjStopAtPos(0, 22);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(1, 23);
         break;
      case 65:
         if ((active0 & 0x80000L) != 0L)
         {
            jjmatchedKind = 19;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000L, active1, 0L);
      case 67:
         return jjMoveStringLiteralDfa2_0(active0, 0x60000000000000L, active1, 0L);
      case 68:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x5000000L);
      case 71:
         if ((active1 & 0x10000L) != 0L)
            return jjStopAtPos(1, 80);
         break;
      case 84:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000000L);
      case 85:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000000L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 50:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(2, 20);
         break;
      case 68:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000000L);
      case 70:
         if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(2, 90);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStopAtPos(2, 92);
         break;
      case 71:
         if ((active0 & 0x20000000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000000L, active1, 0L);
      case 76:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000000L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000000L, active1, 0L);
      case 70:
         if ((active1 & 0x1000000L) != 0L)
            return jjStopAtPos(3, 88);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStopAtPos(3, 91);
         break;
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x20000L);
      case 120:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x20000L);
      case 112:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(5, 54);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20000L) != 0L)
            return jjStopAtPos(6, 81);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0x0L, 0x10000000000L
};
static final long[] jjbitVec1 = {
   0x0L, 0x0L, 0x0L, 0x20000000000L
};
static final long[] jjbitVec2 = {
   0xffffff7ffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec5 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffdffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 239;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAddStates(0, 2);
                  }
                  else if ((0x100000600L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 120)
                     kind = 120;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 32)
                     jjAddStates(3, 4);
                  break;
               case 10:
                  if (curChar == 32)
                     jjAddStates(5, 6);
                  break;
               case 14:
                  if (curChar == 32)
                     jjAddStates(7, 8);
                  break;
               case 16:
                  if (curChar == 32)
                     jjAddStates(9, 10);
                  break;
               case 17:
                  if (kind > 2)
                     kind = 2;
                  break;
               case 20:
                  if (curChar == 32)
                     jjAddStates(11, 12);
                  break;
               case 22:
                  if (curChar == 32)
                     jjAddStates(13, 14);
                  break;
               case 28:
                  if (curChar == 32)
                     jjAddStates(15, 16);
                  break;
               case 30:
                  if (curChar == 32)
                     jjAddStates(17, 18);
                  break;
               case 31:
                  if (kind > 8)
                     kind = 8;
                  break;
               case 36:
                  if (curChar == 32)
                     jjAddStates(19, 20);
                  break;
               case 38:
                  if (curChar == 32)
                     jjAddStates(21, 22);
                  break;
               case 41:
                  if (curChar == 32)
                     jjAddStates(23, 24);
                  break;
               case 43:
                  if (curChar == 32)
                     jjAddStates(25, 26);
                  break;
               case 44:
                  if (kind > 14)
                     kind = 14;
                  break;
               case 46:
                  if (curChar == 32)
                     jjAddStates(27, 28);
                  break;
               case 48:
                  if (curChar == 32)
                     jjAddStates(29, 30);
                  break;
               case 53:
                  if (curChar == 32)
                     jjAddStates(31, 32);
                  break;
               case 55:
                  if (curChar == 32)
                     jjAddStates(33, 34);
                  break;
               case 56:
                  if (kind > 26)
                     kind = 26;
                  break;
               case 60:
                  if (curChar == 32)
                     jjAddStates(35, 36);
                  break;
               case 62:
                  if (curChar == 32)
                     jjAddStates(37, 38);
                  break;
               case 66:
                  if (curChar == 32)
                     jjAddStates(39, 40);
                  break;
               case 68:
                  if (curChar == 32)
                     jjAddStates(41, 42);
                  break;
               case 69:
                  if (kind > 36)
                     kind = 36;
                  break;
               case 72:
                  if (curChar == 32)
                     jjAddStates(43, 44);
                  break;
               case 74:
                  if (curChar == 32)
                     jjAddStates(45, 46);
                  break;
               case 79:
                  if (curChar == 32)
                     jjAddStates(47, 48);
                  break;
               case 81:
                  if (curChar == 32)
                     jjAddStates(49, 50);
                  break;
               case 82:
                  if (kind > 42)
                     kind = 42;
                  break;
               case 86:
                  if (curChar == 32)
                     jjAddStates(51, 52);
                  break;
               case 88:
                  if (curChar == 32)
                     jjAddStates(53, 54);
                  break;
               case 90:
                  if (curChar == 32)
                     jjAddStates(55, 56);
                  break;
               case 92:
                  if (curChar == 32)
                     jjAddStates(57, 58);
                  break;
               case 93:
                  if (kind > 48)
                     kind = 48;
                  break;
               case 94:
                  if (curChar == 32)
                     jjAddStates(59, 60);
                  break;
               case 96:
                  if (curChar == 32)
                     jjAddStates(61, 62);
                  break;
               case 104:
                  if (curChar == 32)
                     jjAddStates(63, 64);
                  break;
               case 106:
                  if (curChar == 32)
                     jjAddStates(65, 66);
                  break;
               case 107:
                  if (kind > 56)
                     kind = 56;
                  break;
               case 114:
                  if (curChar == 32)
                     jjAddStates(67, 68);
                  break;
               case 116:
                  if (curChar == 32)
                     jjAddStates(69, 70);
                  break;
               case 124:
                  if (curChar == 32)
                     jjAddStates(71, 72);
                  break;
               case 126:
                  if (curChar == 32)
                     jjAddStates(73, 74);
                  break;
               case 127:
                  if (kind > 63)
                     kind = 63;
                  break;
               case 134:
                  if (curChar == 32)
                     jjAddStates(75, 76);
                  break;
               case 136:
                  if (curChar == 32)
                     jjAddStates(77, 78);
                  break;
               case 142:
                  if (curChar == 32)
                     jjAddStates(79, 80);
                  break;
               case 144:
                  if (curChar == 32)
                     jjAddStates(81, 82);
                  break;
               case 145:
                  if (kind > 69)
                     kind = 69;
                  break;
               case 150:
                  if (curChar == 32)
                     jjAddStates(83, 84);
                  break;
               case 152:
                  if (curChar == 32)
                     jjAddStates(85, 86);
                  break;
               case 156:
                  if (curChar == 32)
                     jjAddStates(87, 88);
                  break;
               case 158:
                  if (curChar == 32)
                     jjAddStates(89, 90);
                  break;
               case 159:
                  if (kind > 75)
                     kind = 75;
                  break;
               case 162:
                  if (curChar == 32)
                     jjAddStates(91, 92);
                  break;
               case 164:
                  if (curChar == 32)
                     jjAddStates(93, 94);
                  break;
               case 172:
                  if (curChar == 32)
                     jjAddStates(95, 96);
                  break;
               case 174:
                  if (curChar == 32)
                     jjAddStates(97, 98);
                  break;
               case 175:
                  if (kind > 83)
                     kind = 83;
                  break;
               case 182:
                  if (curChar == 32)
                     jjAddStates(99, 100);
                  break;
               case 184:
                  if (curChar == 32)
                     jjAddStates(101, 102);
                  break;
               case 192:
                  if (curChar == 32)
                     jjAddStates(103, 104);
                  break;
               case 194:
                  if (curChar == 32)
                     jjAddStates(105, 106);
                  break;
               case 195:
                  if (kind > 94)
                     kind = 94;
                  break;
               case 202:
                  if (curChar == 32)
                     jjAddStates(107, 108);
                  break;
               case 204:
                  if (curChar == 32)
                     jjAddStates(109, 110);
                  break;
               case 210:
                  if (curChar == 32)
                     jjAddStates(111, 112);
                  break;
               case 212:
                  if (curChar == 32)
                     jjAddStates(113, 114);
                  break;
               case 213:
                  if (kind > 103)
                     kind = 103;
                  break;
               case 218:
                  if (curChar == 32)
                     jjAddStates(115, 116);
                  break;
               case 219:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(220, 221);
                  break;
               case 220:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(220, 221);
                  break;
               case 226:
                  if (curChar == 32)
                     jjAddStates(117, 118);
                  break;
               case 227:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 228:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 229:
                  if (kind > 109)
                     kind = 109;
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAddStates(0, 2);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(235);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(236, 237);
                  break;
               case 237:
                  if (curChar == 46)
                     jjCheckNAdd(238);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 116)
                     kind = 116;
                  jjCheckNAdd(238);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAddStates(119, 121);
                  }
                  else if (curChar == 84)
                  {
                     if (kind > 120)
                        kind = 120;
                     jjstateSet[jjnewStateCnt++] = 5;
                  }
                  break;
               case 1:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAddStates(119, 121);
                  break;
               case 2:
                  if (curChar == 95)
                     jjCheckNAdd(3);
                  break;
               case 4:
                  if (curChar != 84)
                     break;
                  if (kind > 120)
                     kind = 120;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 116)
                     jjAddStates(5, 6);
                  break;
               case 12:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 13:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 15:
                  if (curChar == 116)
                     jjAddStates(9, 10);
                  break;
               case 17:
                  if (kind > 2)
                     kind = 2;
                  break;
               case 18:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 19:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if (curChar == 116)
                     jjAddStates(13, 14);
                  break;
               case 24:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 25:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 29:
                  if (curChar == 116)
                     jjAddStates(17, 18);
                  break;
               case 31:
                  if (kind > 8)
                     kind = 8;
                  break;
               case 32:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 33:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 37:
                  if (curChar == 100)
                     jjAddStates(21, 22);
                  break;
               case 40:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 42:
                  if (curChar == 100)
                     jjAddStates(25, 26);
                  break;
               case 44:
                  if (kind > 14)
                     kind = 14;
                  break;
               case 45:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 47:
                  if (curChar == 116)
                     jjAddStates(29, 30);
                  break;
               case 50:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 51:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if (curChar == 116)
                     jjAddStates(33, 34);
                  break;
               case 56:
                  if (kind > 26)
                     kind = 26;
                  break;
               case 57:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 58:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 61:
                  if (curChar == 112)
                     jjAddStates(37, 38);
                  break;
               case 64:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 65:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 67:
                  if (curChar == 112)
                     jjAddStates(41, 42);
                  break;
               case 69:
                  if (kind > 36)
                     kind = 36;
                  break;
               case 70:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 71:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 73:
                  if (curChar == 101)
                     jjAddStates(45, 46);
                  break;
               case 76:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 77:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 80:
                  if (curChar == 101)
                     jjAddStates(49, 50);
                  break;
               case 82:
                  if (kind > 42)
                     kind = 42;
                  break;
               case 83:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 84:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 87:
                  if (curChar == 84)
                     jjAddStates(53, 54);
                  break;
               case 91:
                  if (curChar == 84)
                     jjAddStates(57, 58);
                  break;
               case 93:
                  if (kind > 48)
                     kind = 48;
                  break;
               case 95:
                  if (curChar == 114)
                     jjAddStates(61, 62);
                  break;
               case 98:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 99:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 105:
                  if (curChar == 114)
                     jjAddStates(65, 66);
                  break;
               case 107:
                  if (kind > 56)
                     kind = 56;
                  break;
               case 108:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 109:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 115:
                  if (curChar == 114)
                     jjAddStates(69, 70);
                  break;
               case 118:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 119:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if (curChar == 114)
                     jjAddStates(73, 74);
                  break;
               case 127:
                  if (kind > 63)
                     kind = 63;
                  break;
               case 128:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 129:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 135:
                  if (curChar == 103)
                     jjAddStates(77, 78);
                  break;
               case 138:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 139:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 143:
                  if (curChar == 103)
                     jjAddStates(81, 82);
                  break;
               case 145:
                  if (kind > 69)
                     kind = 69;
                  break;
               case 146:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 147:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if (curChar == 112)
                     jjAddStates(85, 86);
                  break;
               case 154:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 155:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 157:
                  if (curChar == 112)
                     jjAddStates(89, 90);
                  break;
               case 159:
                  if (kind > 75)
                     kind = 75;
                  break;
               case 160:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 161:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 163:
                  if (curChar == 114)
                     jjAddStates(93, 94);
                  break;
               case 166:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 167:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 173:
                  if (curChar == 114)
                     jjAddStates(97, 98);
                  break;
               case 175:
                  if (kind > 83)
                     kind = 83;
                  break;
               case 176:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 177:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 183:
                  if (curChar == 114)
                     jjAddStates(101, 102);
                  break;
               case 186:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 187:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 193:
                  if (curChar == 114)
                     jjAddStates(105, 106);
                  break;
               case 195:
                  if (kind > 94)
                     kind = 94;
                  break;
               case 196:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 197:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if (curChar == 103)
                     jjAddStates(109, 110);
                  break;
               case 206:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 207:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 211:
                  if (curChar == 103)
                     jjAddStates(113, 114);
                  break;
               case 213:
                  if (kind > 103)
                     kind = 103;
                  break;
               case 214:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 215:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 222:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 223:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 229:
                  if (kind > 109)
                     kind = 109;
                  break;
               case 230:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 231:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(122, 181);
                  break;
               case 11:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 1)
                     kind = 1;
                  break;
               case 17:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 2)
                     kind = 2;
                  break;
               case 23:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 7)
                     kind = 7;
                  break;
               case 31:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 8)
                     kind = 8;
                  break;
               case 39:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 13)
                     kind = 13;
                  break;
               case 44:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 14)
                     kind = 14;
                  break;
               case 49:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 25)
                     kind = 25;
                  break;
               case 56:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 26)
                     kind = 26;
                  break;
               case 63:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 35)
                     kind = 35;
                  break;
               case 69:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 36)
                     kind = 36;
                  break;
               case 75:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 41)
                     kind = 41;
                  break;
               case 82:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 42)
                     kind = 42;
                  break;
               case 89:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 47)
                     kind = 47;
                  break;
               case 93:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 48)
                     kind = 48;
                  break;
               case 97:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 55)
                     kind = 55;
                  break;
               case 107:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 56)
                     kind = 56;
                  break;
               case 117:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 62)
                     kind = 62;
                  break;
               case 127:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 63)
                     kind = 63;
                  break;
               case 137:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 68)
                     kind = 68;
                  break;
               case 145:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 69)
                     kind = 69;
                  break;
               case 153:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 74)
                     kind = 74;
                  break;
               case 159:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 75)
                     kind = 75;
                  break;
               case 165:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 82)
                     kind = 82;
                  break;
               case 175:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 83)
                     kind = 83;
                  break;
               case 185:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 93)
                     kind = 93;
                  break;
               case 195:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 94)
                     kind = 94;
                  break;
               case 205:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 102)
                     kind = 102;
                  break;
               case 213:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 103)
                     kind = 103;
                  break;
               case 221:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 108)
                     kind = 108;
                  break;
               case 229:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 109)
                     kind = 109;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 239 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 3);
      case 10217:
         return jjStopAtPos(0, 4);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_6()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 15);
      case 10217:
         return jjStopAtPos(0, 16);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_18()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 64);
      case 10217:
         return jjStopAtPos(0, 65);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_23()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 84);
      case 10217:
         return jjStopAtPos(0, 86);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa0_13()
{
   switch(curChar)
   {
      case 10216:
         return jjStopAtPos(0, 49);
      case 10217:
         return jjStopAtPos(0, 51);
      default :
         return 1;
   }
}
static final int[] jjnextStates = {
   235, 236, 237, 8, 13, 10, 11, 14, 19, 16, 17, 20, 27, 22, 23, 28, 
   35, 30, 31, 36, 40, 38, 39, 41, 45, 43, 44, 46, 52, 48, 49, 53, 
   59, 55, 56, 60, 65, 62, 63, 66, 71, 68, 69, 72, 78, 74, 75, 79, 
   85, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 103, 96, 97, 104, 
   113, 106, 107, 114, 123, 116, 117, 124, 133, 126, 127, 134, 141, 136, 137, 142, 
   149, 144, 145, 150, 155, 152, 153, 156, 161, 158, 159, 162, 171, 164, 165, 172, 
   181, 174, 175, 182, 191, 184, 185, 192, 201, 194, 195, 202, 209, 204, 205, 210, 
   217, 212, 213, 218, 225, 226, 233, 1, 2, 3, 8, 13, 14, 19, 20, 27, 
   28, 35, 36, 40, 41, 45, 46, 52, 53, 59, 60, 65, 66, 71, 72, 78, 
   79, 85, 86, 87, 90, 91, 94, 103, 104, 113, 114, 123, 124, 133, 134, 141, 
   142, 149, 150, 155, 156, 161, 162, 171, 172, 181, 182, 191, 192, 201, 202, 209, 
   210, 217, 218, 225, 226, 233, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 39:
         return ((jjbitVec0[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 39:
         return ((jjbitVec1[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 39:
         return ((jjbitVec5[i2] & l2) != 0L);
      default :
         if ((jjbitVec2[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\124\101", "\124\101\62", "\173", "\175", 
"\72\75", "\73", null, null, null, null, null, null, "\53", "\52", "\50", "\51", null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, "\111\103\107", "\111\103\107\105\170\160", null, null, null, null, 
null, null, "\75", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\103\107", 
"\103\157\155\160\151\154\145", null, null, null, null, null, null, "\101\104\104\106", "\54", "\114\104\106", 
"\115\125\114\106", "\123\124\106", null, null, null, null, null, null, "\43", "\133", "\135", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_META_T_M_INT",
   "IN_NESTED_META_T_M_INT",
   "IN_META_T_M_FLOAT",
   "IN_NESTED_META_T_M_FLOAT",
   "IN_META_T_M_ID",
   "IN_NESTED_META_T_M_ID",
   "IN_META_T_M_STAT",
   "IN_NESTED_META_T_M_STAT",
   "IN_META_T_M_EXP",
   "IN_NESTED_META_T_M_EXP",
   "IN_META_T_M_NAME",
   "IN_NESTED_META_T_M_NAME",
   "IN_META_T_M_T",
   "IN_NESTED_META_T_M_T",
   "IN_META_T_M_I_XPROGR",
   "IN_NESTED_META_T_M_I_XPROGR",
   "IN_META_T_M_I_XINSTR",
   "IN_NESTED_META_T_M_I_XINSTR",
   "IN_META_T_M_I_XARG",
   "IN_NESTED_META_T_M_I_XARG",
   "IN_META_T_M_TMP",
   "IN_NESTED_META_T_M_TMP",
   "IN_META_T_M_A_XPROGR",
   "IN_NESTED_META_T_M_A_XPROGR",
   "IN_META_T_M_A_XINSTR",
   "IN_NESTED_META_T_M_A_XINSTR",
   "IN_META_T_M_A_XARG",
   "IN_NESTED_META_T_M_A_XARG",
   "IN_META_T_M_STAT_XMAYBESOME",
   "IN_NESTED_META_T_M_STAT_XMAYBESOME",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, 2, -1, 0, -1, -1, 3, 4, -1, 0, -1, -1, 5, 6, -1, 0, -1, -1, -1, -1, -1, -1, -1, 
   -1, 7, 8, -1, 0, -1, -1, -1, -1, -1, -1, 9, 10, -1, 0, -1, -1, 11, 12, -1, 0, -1, -1, 13, 14, 
   -1, 0, -1, -1, -1, -1, 15, 16, -1, 0, -1, -1, -1, 17, 18, -1, 0, -1, -1, 19, 20, -1, 0, -1, -1, 
   21, 22, -1, 0, -1, -1, -1, -1, 23, 24, -1, 0, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, 0, -1, -1, 
   -1, -1, -1, 27, 28, -1, 0, -1, -1, 29, 30, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0x68e8a28fa3fa28a3L, 0x139147a3f474514L, 
};
static final long[] jjtoSkip = {
   0x0L, 0x4000000000000L, 
};
static final long[] jjtoMore = {
   0x97175d705c05d75cL, 0x2eb85c0b8baebL, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[239];
private final int[] jjstateSet = new int[478];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public FirstParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public FirstParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 239; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 31 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 6)
         {
            jjmatchedKind = 6;
         }
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 6)
         {
            jjmatchedKind = 6;
         }
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
       case 4:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_4();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
       case 5:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_5();
         if (jjmatchedPos == 0 && jjmatchedKind > 18)
         {
            jjmatchedKind = 18;
         }
         break;
       case 6:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_6();
         if (jjmatchedPos == 0 && jjmatchedKind > 18)
         {
            jjmatchedKind = 18;
         }
         break;
       case 7:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_7();
         if (jjmatchedPos == 0 && jjmatchedKind > 30)
         {
            jjmatchedKind = 30;
         }
         break;
       case 8:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_8();
         if (jjmatchedPos == 0 && jjmatchedKind > 30)
         {
            jjmatchedKind = 30;
         }
         break;
       case 9:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_9();
         if (jjmatchedPos == 0 && jjmatchedKind > 40)
         {
            jjmatchedKind = 40;
         }
         break;
       case 10:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_10();
         if (jjmatchedPos == 0 && jjmatchedKind > 40)
         {
            jjmatchedKind = 40;
         }
         break;
       case 11:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_11();
         if (jjmatchedPos == 0 && jjmatchedKind > 46)
         {
            jjmatchedKind = 46;
         }
         break;
       case 12:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_12();
         if (jjmatchedPos == 0 && jjmatchedKind > 46)
         {
            jjmatchedKind = 46;
         }
         break;
       case 13:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_13();
         if (jjmatchedPos == 0 && jjmatchedKind > 52)
         {
            jjmatchedKind = 52;
         }
         break;
       case 14:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_14();
         if (jjmatchedPos == 0 && jjmatchedKind > 52)
         {
            jjmatchedKind = 52;
         }
         break;
       case 15:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_15();
         if (jjmatchedPos == 0 && jjmatchedKind > 60)
         {
            jjmatchedKind = 60;
         }
         break;
       case 16:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_16();
         if (jjmatchedPos == 0 && jjmatchedKind > 60)
         {
            jjmatchedKind = 60;
         }
         break;
       case 17:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_17();
         if (jjmatchedPos == 0 && jjmatchedKind > 67)
         {
            jjmatchedKind = 67;
         }
         break;
       case 18:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_18();
         if (jjmatchedPos == 0 && jjmatchedKind > 67)
         {
            jjmatchedKind = 67;
         }
         break;
       case 19:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_19();
         if (jjmatchedPos == 0 && jjmatchedKind > 73)
         {
            jjmatchedKind = 73;
         }
         break;
       case 20:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_20();
         if (jjmatchedPos == 0 && jjmatchedKind > 73)
         {
            jjmatchedKind = 73;
         }
         break;
       case 21:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_21();
         if (jjmatchedPos == 0 && jjmatchedKind > 79)
         {
            jjmatchedKind = 79;
         }
         break;
       case 22:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_22();
         if (jjmatchedPos == 0 && jjmatchedKind > 79)
         {
            jjmatchedKind = 79;
         }
         break;
       case 23:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_23();
         if (jjmatchedPos == 0 && jjmatchedKind > 87)
         {
            jjmatchedKind = 87;
         }
         break;
       case 24:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_24();
         if (jjmatchedPos == 0 && jjmatchedKind > 87)
         {
            jjmatchedKind = 87;
         }
         break;
       case 25:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_25();
         if (jjmatchedPos == 0 && jjmatchedKind > 98)
         {
            jjmatchedKind = 98;
         }
         break;
       case 26:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_26();
         if (jjmatchedPos == 0 && jjmatchedKind > 98)
         {
            jjmatchedKind = 98;
         }
         break;
       case 27:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_27();
         if (jjmatchedPos == 0 && jjmatchedKind > 107)
         {
            jjmatchedKind = 107;
         }
         break;
       case 28:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_28();
         if (jjmatchedPos == 0 && jjmatchedKind > 107)
         {
            jjmatchedKind = 107;
         }
         break;
       case 29:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_29();
         if (jjmatchedPos == 0 && jjmatchedKind > 113)
         {
            jjmatchedKind = 113;
         }
         break;
       case 30:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_30();
         if (jjmatchedPos == 0 && jjmatchedKind > 113)
         {
            jjmatchedKind = 113;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 2 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        nested_counter = 0;
         break;
      case 3 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                             nested_counter++;
         break;
      case 4 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             if (--nested_counter <= 0) SwitchTo(IN_META_T_M_INT);
         break;
      case 8 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                          nested_counter = 0;
         break;
      case 9 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                 nested_counter++;
         break;
      case 10 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                               if (--nested_counter <= 0) SwitchTo(IN_META_T_M_FLOAT);
         break;
      case 14 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                       nested_counter = 0;
         break;
      case 15 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                           nested_counter++;
         break;
      case 16 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                            if (--nested_counter <= 0) SwitchTo(IN_META_T_M_ID);
         break;
      case 26 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                         nested_counter = 0;
         break;
      case 27 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                               nested_counter++;
         break;
      case 28 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              if (--nested_counter <= 0) SwitchTo(IN_META_T_M_STAT);
         break;
      case 36 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        nested_counter = 0;
         break;
      case 37 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                             nested_counter++;
         break;
      case 38 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             if (--nested_counter <= 0) SwitchTo(IN_META_T_M_EXP);
         break;
      case 42 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                         nested_counter = 0;
         break;
      case 43 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                               nested_counter++;
         break;
      case 44 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                              if (--nested_counter <= 0) SwitchTo(IN_META_T_M_NAME);
         break;
      case 48 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                      nested_counter = 0;
         break;
      case 49 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                         nested_counter++;
         break;
      case 50 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                           if (--nested_counter <= 0) SwitchTo(IN_META_T_M_T);
         break;
      case 56 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                            nested_counter = 0;
         break;
      case 57 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                       nested_counter++;
         break;
      case 58 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nested_counter <= 0) SwitchTo(IN_META_T_M_I_XPROGR);
         break;
      case 63 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                            nested_counter = 0;
         break;
      case 64 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                       nested_counter++;
         break;
      case 65 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nested_counter <= 0) SwitchTo(IN_META_T_M_I_XINSTR);
         break;
      case 69 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                          nested_counter = 0;
         break;
      case 70 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                   nested_counter++;
         break;
      case 71 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                if (--nested_counter <= 0) SwitchTo(IN_META_T_M_I_XARG);
         break;
      case 75 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                        nested_counter = 0;
         break;
      case 76 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                             nested_counter++;
         break;
      case 77 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                             if (--nested_counter <= 0) SwitchTo(IN_META_T_M_TMP);
         break;
      case 83 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                            nested_counter = 0;
         break;
      case 84 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                       nested_counter++;
         break;
      case 85 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nested_counter <= 0) SwitchTo(IN_META_T_M_A_XPROGR);
         break;
      case 94 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                            nested_counter = 0;
         break;
      case 95 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                       nested_counter++;
         break;
      case 96 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                  if (--nested_counter <= 0) SwitchTo(IN_META_T_M_A_XINSTR);
         break;
      case 103 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                          nested_counter = 0;
         break;
      case 104 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                   nested_counter++;
         break;
      case 105 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                if (--nested_counter <= 0) SwitchTo(IN_META_T_M_A_XARG);
         break;
      case 109 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                          nested_counter = 0;
         break;
      case 110 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                                                     nested_counter++;
         break;
      case 111 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                                                         if (--nested_counter <= 0) SwitchTo(IN_META_T_M_STAT_XMAYBESOME);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
